syntax = "proto3";

service Keymaster {
    rpc AuthenticateUser(UserAuthenticationRequest) returns (UserAuthenticationResponse);
    rpc Search(QueryRequest) returns (QueriedEntries);
    rpc Decrypt(DecryptionRequest) returns (DecryptionResponse);
    rpc Get(GetRequest) returns (GetResponse);
    rpc Put(PutRequest) returns (PutResponse);
}

////////// SAMPLE STRUCTURES //////////
message AbstractRequest {
    string jwt = 1;
    // ... additional content
}

message AbstractResponse {
    uint32 status = 1;
    string code = 2;
    // ... additional content
}


////////// ACTUAL STRUCTURES //////////
message UserAuthenticationRequest {
    string type = 1;  // "client" -> desktop client, "web" -> web client
    string username = 2;
    string password = 3;
}
message UserAuthenticationResponse {
    string jwt = 1;
}

message QueryRequest {
    string jwt = 1;
    string term = 2;
    repeated string type = 3;
}

message QueriedEntries {
    uint32 status = 1;
    string code = 2;
    repeated Entry entries = 3;
}

message Entry {
    string id = 1;
    string kind = 2;
    string name = 3;
    string content = 4;
    repeated string tags = 5;
    // NOTE: EMPTY STRING is considered as NULL.
    string username = 6;
    // NOTE: EMPTY STRING is considered as NULL.
    string password = 7;
    // NOTE: ZERO is considered as NULL
    double modified_at = 8;
}

message GetRequest {
    string jwt = 1;
    string id = 2;
}

message GetResponse {
    uint32 status = 1;
    string code = 2;
    // NOTE: It is designed as a single-value field. Declare as a repeated field as proto3 only allows this type of field null.
    repeated Entry entry = 3;
}

message PutRequest {
    string jwt = 1;
    Entry entry = 2;
}

message PutResponse {
    uint32 status = 1;
    string code = 2;
    string id = 3;
}

message DecryptionRequest {
    string jwt = 1;
    string content = 2;
}

message DecryptionResponse {
    uint32 status = 1;
    string code = 2;
    string content = 3;
}